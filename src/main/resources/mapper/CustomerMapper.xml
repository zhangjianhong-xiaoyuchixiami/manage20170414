<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.qydata.mapper.CustomerMapper">

    <resultMap type="Customer" id="Customer_CustomerType_CustomerStatus_User">
        <result column="id" property="id"/>
        <result column="typeId" property="typeId"/>
        <result column="name" property="name"/>
        <result column="authId" property="authId"/>
        <result column="authPass" property="authPass"/>
        <result column="balance" property="balance"/>
        <result column="status" property="status"/>
        <result column="createTime" property="createTime"/>
        <association property="customerType" javaType="CustomerType">
            <result column="qctname" property="name"/>
        </association>
        <association property="customerStatus" javaType="CustomerStatus">
            <result column="qcsname" property="name"/>
        </association>
        <association property="dept" javaType="Dept">
            <result column="deptName" property="deptName"/>
        </association>
    </resultMap>
    <!--查询指定客户信息-->
    <select id="findByAuthId" parameterType="java.lang.String" resultMap="Customer_CustomerType_CustomerStatus_User">
        select c.id,c.typeId,c.name,c.authId,c.authPass,c.balance,c.createTime,c.qctname,c.qcsname,d.deptName
        from qyauth.CustomerDept cda,qyauth.Dept d,(
                                                        select qc.id,qc.typeId,qc.name,qc.authId,qc.authPass,qc.balance,qc.createTime,qc.status,qct.name qctname,qcs.name qcsname
                                                        from qydata.Customer qc,qydata.CustomerType qct,qydata.CustomerStatus qcs
                                                        where qc.typeId=qct.id and qc.status=qcs.id and qc.authId=#{value}
                                                       ) c
        where cda.customerId=c.id and cda.deptId=d.id
    </select>
    <!--插入新客户真是账号-->
    <insert id="insertCustomer" parameterType="Customer" useGeneratedKeys="true" keyProperty="id">
        insert into qydata.Customer(typeId,name,authId,authPass,balance,createTime,status)
        values(1,#{name},#{authId},uuid(),0.0,sysdate(),0)

        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>
    <!--插入新客户测试账号-->
    <insert id="insertCustomerTest" parameterType="Customer" useGeneratedKeys="true" keyProperty="id">
        insert into qydata.Customer(typeId,name,authId,authPass,balance,createTime,status)
        values(2,#{name},#{authId},uuid(),100000000,sysdate(),0)

        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>
    <!--查询当前登录着可见的客户信息并分页显示-->
    <select id="findAllCustomer" parameterType="Map" resultMap="Customer_CustomerType_CustomerStatus_User">
        select c.id,c.typeId,c.name,c.authId,c.authPass,c.balance,c.createTime,c.qctname,c.qcsname,d.deptName
        from qyauth.CustomerDept cda,qyauth.Dept d,(
                                                            select qc.id,qc.typeId,qc.name,qc.authId,qc.authPass,qc.balance,qc.createTime,qc.status,qct.name qctname,qcs.name qcsname
                                                            from qydata.Customer qc,qydata.CustomerType qct,qydata.CustomerStatus qcs
                                                            where qc.typeId=qct.id and qc.status=qcs.id
                                                        ) c
        where cda.customerId=c.id and cda.deptId=d.id
        <if test="deptIdList!=null and deptIdList.size()!=0">
            and cda.deptId in
            <foreach collection="deptIdList" item="deptId"
                     index="index" open="(" close=")" separator=",">
                #{deptId}
            </foreach>
        </if>
        <if test="content!=null and content!=''">
            and (c.name like '%${content}%' or c.authId like '%${content}%'
            or d.deptName like '%${content}%'
            or c.qctname like '%${content}%' or c.qcsname like '%${content}%')
        </if>
        order by c.createTime desc
        limit #{beginIndex},#{lineSize}
    </select>
    <!--统计当前登陆者可见客户的所有数据-->
    <select id="getAllCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(c.id)
        from qyauth.CustomerDept cda,qyauth.Dept d,(
                                                            select qc.id,qc.typeId,qc.name,qc.authId,qc.authPass,qc.balance,qc.createTime,qc.status,qct.name qctname,qcs.name qcsname
                                                            from qydata.Customer qc,qydata.CustomerType qct,qydata.CustomerStatus qcs
                                                            where qc.typeId=qct.id and qc.status=qcs.id
                                                         ) c
        where cda.customerId=c.id and cda.deptId=d.id
        <if test="deptIdList!=null and deptIdList.size()!=0">
            and cda.deptId in
            <foreach collection="deptIdList" item="deptId"
                     index="index" open="(" close=")" separator=",">
                #{deptId}
            </foreach>
        </if>
        <if test="content!=null and content!=''">
            and (c.name like '%${content}%' or c.authId like '%${content}%'
            or d.deptName like '%${content}%'
            or c.qctname like '%${content}%' or c.qcsname like '%${content}%')
        </if>
    </select>

</mapper>