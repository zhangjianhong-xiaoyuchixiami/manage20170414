<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.qydata.mapper.CompanyMapper">

    <resultMap id="CustomerCompany_Map" type="org.qydata.dst.CustomerCompanyPartner">
        <result column="companyId" property="companyId"/>
        <result column="companyBalance" property="companyBalance"/>
        <result column="floor" property="floor"/>
        <result column="surplusFloor" property="surplusFloor"/>
        <result column="companyName" property="companyName"/>
        <result column="partnerId" property="partnerId"/>
        <result column="partnerName" property="partnerName"/>
        <result column="companyStatus" property="companyStatus"/>
        <result column="companyCreateTime" property="companyCreateTime"/>
    </resultMap>

    <resultMap id="CustomerCompany_Customer_Map" type="org.qydata.dst.CustomerCompanyPartner" extends="CustomerCompany_Map">
        <collection property="customerList" ofType="org.qydata.entity.Customer">
            <result column="customerId" property="id"/>
            <result column="authId" property="authId"/>
            <result column="authPass" property="authPass"/>
            <result column="balance" property="balance"/>
            <result column="customerCreateTime" property="createTime"/>
            <association property="customerType" javaType="org.qydata.entity.CustomerType">
                <result column="typeId" property="id"/>
                <result column="typeName" property="name"/>
            </association>
            <association property="customerStatus" javaType="org.qydata.entity.CustomerStatus">
                <result column="status" property="id"/>
                <result column="statusName" property="name"/>
            </association>
            <collection property="customerIpList" ofType="org.qydata.entity.CustomerIp">
                <result column="beginIpRaw" property="beginIpRaw"/>
                <result column="endIpRaw" property="endIpRaw"/>
            </collection>
        </collection>
    </resultMap>

    <resultMap id="ApiType_Map" type="org.qydata.entity.ApiType">
        <result column="apiTypeId" property="id"/>
        <result column="apiTypeName" property="name"/>
    </resultMap>

    <!--查找客户信息-->
    <select id="findAllCompany" parameterType="map" resultMap="CustomerCompany_Customer_Map">
        SELECT a.id customerId,a.typeId,a.typeName,a.authId,a.authPass,a.balance,a.createTime customerCreateTime,
        a.status,a.statusName,
        c.companyId,c.companyName,c.partnerId,c.partnerName,a.createTime companyCreateTime,c.companyStatus,d.companyBalance,d.floor,
        e.beginIpRaw,e.endIpRaw,
        ((-d.floor)+ifnull(d.consumeTotleAmount,0)+ifnull(d.chargeTotleAmount,0)) surplusFloor
        FROM qyfinance.bkvwCustomer a
        LEFT JOIN qyfinance.bkvw_company_customer c ON a.companyId=c.companyId
        LEFT JOIN
                (
                SELECT aa.companyId,sum(aa.balance) companyBalance,sum(aa.floor) floor,
                sum(bb.chargeTotleAmount) chargeTotleAmount,sum(cc.consumeTotleAmount) consumeTotleAmount
                FROM qyfinance.bkvwCustomer aa
                LEFT JOIN
                (
                SELECT customerId,sum(amount) chargeTotleAmount
                FROM qyfinance.bkvwCustomerBalanceLog
                WHERE reasonId in (1,2,3)
                GROUP BY customerId
                ) bb ON aa.id=bb.customerId
                LEFT JOIN
                (
                SELECT customerId,sum(amount) consumeTotleAmount
                FROM qyfinance.bkvwCustomerBalanceLog
                WHERE reasonId in (-1,-2)
                GROUP BY customerId
                ) cc ON aa.id=cc.customerId
                WHERE typeId=1
                GROUP BY companyId
                ) d ON a.companyId=d.companyId
        LEFT JOIN qyfinance.bkvwCustomerIp e ON a.id=e.customerId
        WHERE a.companyId IS NOT NULL
        <if test="deptIdList!=null and deptIdList.size()!=0">
            AND a.id IN
            (
            SELECT customerId
            FROM qyfinance.bkvwCustomerDept
            WHERE deptId IN
            <foreach collection="deptIdList" item="deptId" index="index" open="(" close=")" separator=",">
                #{deptId}
            </foreach>
            )
        </if>
        <if test="partnerId!=null and partnerId!=''">
            AND a.partnerId=#{partnerId}
        </if>
        <if test="content!=null and content!=''">
            AND a.companyName like '%${content}%'
        </if>
        ORDER BY a.typeId ASC
    </select>

    <!--添加客户信息-->
    <insert id="addCompany" parameterType="org.qydata.entity.Company" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO qydata.CustomerCompany(partnerId,name)
        VALUES (#{partnerId},#{name})
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!--查找全部的合作公司-->
    <select id="findAllPartner" resultType="org.qydata.entity.Partner">
        SELECT id,name FROM qyfinance.bkvwPartner
    </select>

    <!--根据公司Id查找部门编号-->
    <select id="findDeptIdByCompanyId" parameterType="int" resultType="java.lang.Integer">
        SELECT DISTINCT(deptId) FROM qyfinance.bkvwCustomerDept WHERE customerId IN
        (SELECT id FROM qyfinance.bkvwCustomer WHERE companyId=#{param})
    </select>

    <!--查询充值或扣费理由-->
    <select id="findBalanceReason" parameterType="list" resultType="org.qydata.entity.CustomerBalanceModifyReason">
        SELECT id,name
        FROM qyfinance.bkvwCustomerBalanceModifyReason
        <where>
            <if test="list != null and list.size() > 0">
                id IN
                <foreach collection="list" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <!--查询账号余额-->
    <select id="findCustomerBalanceByCustomerId" parameterType="int" resultType="Long">
        SELECT balance FROM qyfinance.bkvwCustomer WHERE id=#{value}
    </select>

    <!--根据账号修改余额-->
    <update id="updateCustomerBalance" parameterType="Object">
        UPDATE qydata.Customer SET balance=#{param2} where id=#{param1}
    </update>

    <!--余额变动日志-->
    <insert id="addCustomerBalanceLog" parameterType="Object" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO qydata.CustomerBalanceLog(customerId,amount,reasonId,createTime)
        VALUES(#{customerId},#{amount},#{reasonId},sysdate())
    </insert>

    <select id="queryApi" parameterType="map" resultMap="ApiType_Map">
        SELECT DISTINCT(a.apiTypeId),a.apiTypeName,a.mobileOperatorId,a.mobileOperatorName
        FROM qyfinance.bkvw_api_ApiTypeVendorPartner a
        WHERE status=0
        ORDER BY a.apiTypeId ASC
    </select>
</mapper>